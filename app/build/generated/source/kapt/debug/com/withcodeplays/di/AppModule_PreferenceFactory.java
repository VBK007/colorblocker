// Generated by Dagger (https://dagger.dev).
package com.withcodeplays.di;

import android.content.Context;
import com.withcodeplays.familytracker.di.PreferenceManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_PreferenceFactory implements Factory<PreferenceManager> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_PreferenceFactory(AppModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public PreferenceManager get() {
    return preference(module, contextProvider.get());
  }

  public static AppModule_PreferenceFactory create(AppModule module,
      Provider<Context> contextProvider) {
    return new AppModule_PreferenceFactory(module, contextProvider);
  }

  public static PreferenceManager preference(AppModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.preference(context));
  }
}
